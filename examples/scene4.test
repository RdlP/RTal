# Test Scene 1 
# A simple quad viewed from different camera positions

size 1024 768
maxdepth 2

# Now specify the camera.  This is what you should implement.
# This file has 4 camera positions.  Render your scene for all 4.

camera 0 0 4 0 0 0 0 1 0 25
#camera 0 -3 3 0 0 0 0 1 0 30
#camera -4 0 1 0 0 1 0 0 1 45
#camera -4 -4 4 1 0 0 0 1 0 30

# lighting/material definitions
# for initial testing, you should get the geometry right
# you may want to use dummy (constant) shading, ignoring these lines

ambient .1 .1 .1
directional 0 0 2 .5 .5 .5 
#point 0 0 4 .5 .5 .5
diffuse 1 0 0 
specular .5 .5 .5
shininess 128

# Now specify the geometry 
# Again, for initial testing, maybe you want to implement a dummy 
# ray-plane intersection routine, instead of reading this fully.
# Though it's probably simpler you just implement this, for later 
# parts of the assignment.



#sphere -.8 -.8 0 0.1
#sphere -.4 -.8 0 0.1
#sphere 0 -.8 0 0.1
#sphere .4 -.8 0 0.1
#sphere .8 -.8 0 0.1

#sphere -.8 -.4 0 0.1

diffuse 1 0 0 
specular 1 1 1
shininess 70
sphere -.4 -.4 0 0.1

diffuse 0 1 0 
specular 1 1 1
shininess 45
sphere 0 -.4 0 0.1

diffuse 1 0 1 
specular 1 1 1
shininess 34
sphere .4 -.4 0 0.1
#sphere .8 -.4 0 0.1

#sphere -.8 0 0 0.1

diffuse .3 0.8 0.5 
specular 1 0 0
shininess 2
sphere -.4 0 0 0.1

diffuse 1 1 0 
specular 1 1 1
shininess 128
sphere 0 0 0 0.1

diffuse 0.3 0.3 0.3 
specular .5 .5 .5
shininess 100
sphere .4 0 0 0.1
#sphere .8 0 0 0.1

#sphere -.8 .4 0 0.1

diffuse 1 1 1 
specular 1 0 0
shininess 50
sphere -.4 .4 0 0.1

diffuse 1 .6 .9 
specular .5 .5 .5
shininess 10
sphere 0 .4 0 0.1

diffuse 1 0 0 
specular .5 .5 .5
shininess 128
sphere .4 .4 0 0.1
#sphere .8 0.4 0 0.1

#sphere -.8 .8 0 0.1
#sphere -.4 .8 0 0.1
#sphere 0 .8 0 0.1
#sphere .4 .8 0 0.1
#sphere .8 0.8 0 0.1

diffuse .6 .3 .9 
specular .5 .5 .5
shininess 128

maxverts 4

vertex -1 -1 10
vertex +1 -1 10
vertex +1 +1 10
vertex -1 +1 10

tri 0 1 2
tri 0 2 3

